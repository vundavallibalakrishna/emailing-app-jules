<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <artifactId>spring-boot-starter-parent</artifactId>
    <groupId>org.springframework.boot</groupId>
    <version>2.1.5.RELEASE</version>
    <relativePath/>
  </parent>

  <groupId>com.wisestep.emailingapp</groupId>
  <artifactId>emailingapp</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>war</packaging>
  <name>EmailingApp</name>

  <properties>
    <java.version>1.8</java.version>
    <argLine>-Djava.security.egd=file:/dev/./urandom -Xmx256m</argLine>
    <dockerimage.name>emailingapp</dockerimage.name>
    <logback.appname>emailingapp</logback.appname>
    <profile.no-liquibase />
    <profile.swagger />
    <javax.inject.version>1</javax.inject.version>
    <argLine>-Djava.security.egd=file:/dev/./urandom -Xmx256m</argLine>
    <lifecycle-mapping.version>1.0.0</lifecycle-mapping.version>
    <mapstruct.version>1.1.0.CR2</mapstruct.version>
    <openapi-generator-maven-plugin.version>4.0.2</openapi-generator-maven-plugin.version>
    <jib-maven-plugin.version>3.3.1</jib-maven-plugin.version>
    <maven-clean-plugin.version>3.1.0</maven-clean-plugin.version>
    <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
    <maven-eclipse-plugin.version>2.10</maven-eclipse-plugin.version>
    <maven-enforcer-plugin.version>3.0.0-M1</maven-enforcer-plugin.version>
    <maven-failsafe-plugin.version>3.0.0-M3</maven-failsafe-plugin.version>
    <maven-idea-plugin.version>2.2.1</maven-idea-plugin.version>
    <maven-javadoc-plugin.version>3.1.0</maven-javadoc-plugin.version>
    <maven-resources-plugin.version>3.1.0</maven-resources-plugin.version>
    <maven-surefire-plugin.version>3.0.0-M3</maven-surefire-plugin.version>
    <maven-war-plugin.version>3.2.3</maven-war-plugin.version>
    <maven.build.timestamp.format>yyyyMMddHHmmss</maven.build.timestamp.format>
    <maven.compiler.source>${java.version}</maven.compiler.source>
    <maven.compiler.target>${java.version}</maven.compiler.target>
    <project.testresult.directory>${project.build.directory}/test-results</project.testresult.directory>
    <properties-maven-plugin.version>1.0.0</properties-maven-plugin.version>
    <run.addResources>false</run.addResources>
    <sonar-maven-plugin.version>3.6.0.1398</sonar-maven-plugin.version>
    <sonar.exclusions>src/main/webapp/content/**/*.*, src/main/webapp/bower_components/**/*.*, target/www/**/*.*</sonar.exclusions>
    <sonar.jacoco.itReportPath>${project.testresult.directory}/coverage/jacoco/jacoco-it.exec</sonar.jacoco.itReportPath>
    <sonar.jacoco.reportPath>${project.testresult.directory}/coverage/jacoco/jacoco.exec</sonar.jacoco.reportPath>
    <sonar.java.codeCoveragePlugin>jacoco</sonar.java.codeCoveragePlugin>
    <sonar.javascript.jstestdriver.reportsPath>${project.testresult.directory}/karma</sonar.javascript.jstestdriver.reportsPath>
    <sonar.javascript.lcov.reportPath>${project.testresult.directory}/coverage/report-lcov/lcov.info</sonar.javascript.lcov.reportPath>
    <sonar.sources>${project.basedir}/src/main/</sonar.sources>
    <sonar.surefire.reportsPath>${project.testresult.directory}/surefire-reports</sonar.surefire.reportsPath>
    <sonar.tests>${project.basedir}/src/test/</sonar.tests>
    <sortpom-maven-plugin.version>2.5.0</sortpom-maven-plugin.version>
    <gatling-maven-plugin.version>2.2.0</gatling-maven-plugin.version>
    <gatling.version>2.2.0</gatling.version>
    <git-commit-id-plugin.version>2.2.6</git-commit-id-plugin.version>
    <jacoco-maven-plugin.version>0.8.4</jacoco-maven-plugin.version>
    <jacoco-maven-plugin.version>0.7.7.201606060606</jacoco-maven-plugin.version>
    <m2e.apt.activation>jdt_apt</m2e.apt.activation>
    <tika.version>1.14</tika.version>
    <elastic-apm.version>1.16.0</elastic-apm.version>
    <google-guava.version>28.2-jre</google-guava.version>
    <awaitility.version>1.7.0</awaitility.version>
    <assertj-core.version>3.5.2</assertj-core.version>
    <wisestep-core.version>1.0.0</wisestep-core.version>
    <google-api.version>1.23.0</google-api.version>
    <google-api-gmail.version>v1-rev82-1.23.0</google-api-gmail.version>
    <google-api-calendar.version>v3-rev378-1.23.0</google-api-calendar.version>
    <google-api.gdrive.version>v3-rev197-1.25.0</google-api.gdrive.version>
    <google-api.oauth2.version>v2-rev157-1.25.0</google-api.oauth2.version>
    <google-api-maps.version>0.10.2</google-api-maps.version>
    <sendin-blue.version>3.0.1</sendin-blue.version>
    <open-csv.version>5.0</open-csv.version>
    <apache-poi.version>3.17</apache-poi.version>
    <apache-poi-ooxml.version>3.17</apache-poi-ooxml.version>
    <jsoup.version>1.10.2</jsoup.version>
    <org-json.version>20201115</org-json.version>
    <redis-scheduler.version>3.0.0</redis-scheduler.version>
    <spring-problem-support.version>0.26.2</spring-problem-support.version>
    <mockito.version>3.5.11</mockito.version>
    <itextpdf.version>5.5.11</itextpdf.version>
    <apache-commons-net.version>3.6</apache-commons-net.version>
    <apache-commons-compress.version>1.23.0</apache-commons-compress.version>
    <apache-commons-io.version>2.11.0</apache-commons-io.version>
    <msgraph.version>2.6.0</msgraph.version>
    <msal4j.version>1.8.0</msal4j.version>
    <oltu.oauth2.version>0.31</oltu.oauth2.version>
    <postgres.sql.version>42.3.1</postgres.sql.version>
    <hibernate.types.version>2.21.0</hibernate.types.version>
    <drools.version>8.44.0.Final</drools.version>
    <drools-kie-spring.version>7.74.1.Final</drools-kie-spring.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.wisestep</groupId>
        <artifactId>wisestepcore</artifactId>
        <version>${wisestep-core.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.tika</groupId>
        <artifactId>tika-parsers</artifactId>
        <version>${tika.version}</version>
        <exclusions>
          <!-- Not Apache2 License compatible -->
          <exclusion>
            <artifactId>netcdf</artifactId>
            <groupId>edu.ucar</groupId>
          </exclusion>
          <!-- Not Apache2 License compatible -->
          <exclusion>
            <artifactId>cdm</artifactId>
            <groupId>edu.ucar</groupId>
          </exclusion>
          <!-- Not Apache2 License compatible -->
          <exclusion>
            <artifactId>httpservices</artifactId>
            <groupId>edu.ucar</groupId>
          </exclusion>
          <!-- Not Apache2 License compatible -->
          <exclusion>
            <artifactId>grib</artifactId>
            <groupId>edu.ucar</groupId>
          </exclusion>
          <!-- Not Apache2 License compatible -->
          <exclusion>
            <artifactId>netcdf4</artifactId>
            <groupId>edu.ucar</groupId>
          </exclusion>
          <!-- Not Apache2 License compatible -->
          <exclusion>
            <artifactId>jhighlight</artifactId>
            <groupId>com.uwyn</groupId>
          </exclusion>
          <!-- ES core already has these -->
          <exclusion>
            <artifactId>asm-debug-all</artifactId>
            <groupId>org.ow2.asm</groupId>
          </exclusion>
          <exclusion>
            <artifactId>commons-logging-api</artifactId>
            <groupId>commons-logging</groupId>
          </exclusion>
          <!-- Must be removed because it conflicts with Jersey (another JaxRS implementation) -->
          <exclusion>
            <artifactId>cxf-rt-rs-client</artifactId>
            <groupId>org.apache.cxf</groupId>
          </exclusion>
          <exclusion>
            <groupId>org.quartz-scheduler</groupId>
            <artifactId>quartz</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>co.elastic.apm</groupId>
        <artifactId>apm-agent-attach</artifactId>
        <version>${elastic-apm.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>${google-guava.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.api-client</groupId>
        <artifactId>google-api-client</artifactId>
        <version>${google-api.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.apis</groupId>
        <artifactId>google-api-services-gmail</artifactId>
        <version>${google-api-gmail.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.maps</groupId>
        <artifactId>google-maps-services</artifactId>
        <version>${google-api-maps.version}</version>
      </dependency>
      <dependency>
        <groupId>com.sendinblue</groupId>
        <artifactId>sib-api-v3-sdk</artifactId>
        <version>${sendin-blue.version}</version>
      </dependency>
      <dependency>
        <groupId>org.assertj</groupId>
        <artifactId>assertj-core</artifactId>
        <version>${assertj-core.version}</version>
      </dependency>
      <dependency>
        <groupId>com.jayway.awaitility</groupId>
        <artifactId>awaitility</artifactId>
        <version>${awaitility.version}</version>
      </dependency>
      <dependency>
        <groupId>io.gatling.highcharts</groupId>
        <artifactId>gatling-charts-highcharts</artifactId>
        <version>${gatling.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.poi</groupId>
        <artifactId>poi</artifactId>
        <version>${apache-poi.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.poi</groupId>
        <artifactId>poi-ooxml</artifactId>
        <version>${apache-poi-ooxml.version}</version>
      </dependency>
      <dependency>
        <groupId>com.opencsv</groupId>
        <artifactId>opencsv</artifactId>
        <version>${open-csv.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jsoup</groupId>
        <artifactId>jsoup</artifactId>
        <version>${jsoup.version}</version>
      </dependency>
      <dependency>
        <groupId>org.json</groupId>
        <artifactId>json</artifactId>
        <version>${org-json.version}</version>
      </dependency>
      <dependency>
        <groupId>com.github.davidmarquis</groupId>
        <artifactId>redis-scheduler</artifactId>
        <version>${redis-scheduler.version}</version>
      </dependency>
      <dependency>
        <groupId>org.zalando</groupId>
        <artifactId>problem-spring-web</artifactId>
        <version>${spring-problem-support.version}</version>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <version>${mockito.version}</version>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-inline</artifactId>
        <version>${mockito.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.apis</groupId>
        <artifactId>google-api-services-calendar</artifactId>
        <version>${google-api-calendar.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.apis</groupId>
        <artifactId>google-api-services-drive</artifactId>
        <version>${google-api.gdrive.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.apis</groupId>
        <artifactId>google-api-services-oauth2</artifactId>
        <version>${google-api.oauth2.version}</version>
      </dependency>
      <dependency>
        <groupId>com.itextpdf</groupId>
        <artifactId>itextpdf</artifactId>
        <version>${itextpdf.version}</version>
      </dependency>
      <dependency>
        <groupId>com.itextpdf.tool</groupId>
        <artifactId>xmlworker</artifactId>
        <version>${itextpdf.version}</version>
      </dependency>
      <dependency>
        <groupId>commons-net</groupId>
        <artifactId>commons-net</artifactId>
        <version>${apache-commons-net.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-compress</artifactId>
        <version>${apache-commons-compress.version}</version>
      </dependency>
      <dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>${apache-commons-io.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.dataformat</groupId>
        <artifactId>jackson-dataformat-xml</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.oltu.oauth2</groupId>
        <artifactId>org.apache.oltu.oauth2.client</artifactId>
        <version>${oltu.oauth2.version}</version>
      </dependency>
      <dependency>
        <groupId>org.postgresql</groupId>
        <artifactId>postgresql</artifactId>
        <version>${postgres.sql.version}</version>
      </dependency>
      <dependency>
        <groupId>com.vladmihalcea</groupId>
        <artifactId>hibernate-types-52</artifactId>
        <version>${hibernate.types.version}</version>
      </dependency>
      <dependency>
        <groupId>com.microsoft.graph</groupId>
        <artifactId>microsoft-graph</artifactId>
        <version>${msgraph.version}</version>
        <exclusions>
          <exclusion>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>com.microsoft.azure</groupId>
        <artifactId>msal4j</artifactId>
        <version>${msal4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.drools</groupId>
        <artifactId>drools-core</artifactId>
        <version>${drools.version}</version>
      </dependency>
      <dependency>
        <groupId>org.drools</groupId>
        <artifactId>drools-compiler</artifactId>
        <version>${drools.version}</version>
      </dependency>
      <dependency>
        <groupId>org.kie</groupId>
        <artifactId>kie-spring</artifactId>
        <version>${drools-kie-spring.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <repositories>
    <!--Uncomment this below repository when you are setting up the stack for the first time. It will speed up things-->
    <repository>
        <snapshots>
            <enabled>false</enabled>
        </snapshots>
        <id>central</id>
        <name>Central Repository</name>
        <url>https://repo.maven.apache.org/maven2</url>
    </repository>
    <repository>
      <id>wisestep--wisestep-core</id>
      <name>wisestep--wisestep-core</name>
      <url>https://wisestep-583710772031.d.codeartifact.eu-west-1.amazonaws.com/maven/wisestep-core/</url>
    </repository>
    <repository>
      <id>confluent</id>
      <url>http://packages.confluent.io/maven/</url>
    </repository>
  </repositories>

  <dependencies>
    <!--        <dependency>-->
    <!--            <groupId>com.datastax.cassandra</groupId>-->
    <!--            <artifactId>cassandra-driver-extras</artifactId>-->
    <!--            <version>3.6.0</version>-->
    <!--        </dependency>-->
    <!--        <dependency>-->
    <!--            <groupId>com.datastax.cassandra</groupId>-->
    <!--            <artifactId>cassandra-driver-mapping</artifactId>-->
    <!--        </dependency>-->
    <dependency>
      <groupId>com.fasterxml</groupId>
      <artifactId>jackson-xml-databind</artifactId>
      <version>0.6.2</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>com.github.kstyrc</groupId>
      <artifactId>embedded-redis</artifactId>
      <version>0.6</version>
    </dependency>
    <dependency>
      <groupId>com.google.api-client</groupId>
      <artifactId>google-api-client</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.api-client</groupId>
      <artifactId>google-api-client</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.apis</groupId>
      <artifactId>google-api-services-calendar</artifactId>
    </dependency>

    <dependency>
      <groupId>com.google.apis</groupId>
      <artifactId>google-api-services-drive</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.apis</groupId>
      <artifactId>google-api-services-gmail</artifactId>
    </dependency>

    <dependency>
      <groupId>com.google.apis</groupId>
      <artifactId>google-api-services-gmail</artifactId>
    </dependency>

    <dependency>
      <groupId>com.google.apis</groupId>
      <artifactId>google-api-services-oauth2</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
      <version>2.8.6</version>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
    </dependency>
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- Mailgun -->
    <dependency>
      <groupId>com.mailgun</groupId>
      <artifactId>mailgun-java</artifactId>
      <version>1.0.6</version>
    </dependency>
    <dependency>
      <groupId>com.microsoft.azure</groupId>
      <artifactId>msal4j</artifactId>
    </dependency>
    <dependency>
      <groupId>com.microsoft.azure</groupId>
      <artifactId>msal4j</artifactId>
    </dependency>
    <dependency>
      <groupId>com.microsoft.graph</groupId>
      <artifactId>microsoft-graph</artifactId>
    </dependency>
    <dependency>
      <groupId>com.microsoft.graph</groupId>
      <artifactId>microsoft-graph</artifactId>
    </dependency>

    <!-- Postmark -->
    <dependency>
      <groupId>com.postmarkapp</groupId>
      <artifactId>postmark</artifactId>
      <version>1.10.0</version>
    </dependency>

    <!-- SendGrid -->
    <dependency>
      <groupId>com.sendgrid</groupId>
      <artifactId>sendgrid-java</artifactId>
      <version>4.9.3</version>
    </dependency>

    <!-- Elastic Email -->
    <dependency>
      <groupId>com.elasticemail</groupId>
      <artifactId>elasticemail-java</artifactId>
      <version>4.0.24</version>
    </dependency>

    <!-- Mailchimp Transactional (Mandrill) -->
    <dependency>
      <groupId>com.mailchimp</groupId>
      <artifactId>mailchimp-transactional-java</artifactId>
      <version>1.0.55</version>
    </dependency>

    <!-- SparkPost -->
    <dependency>
      <groupId>com.sparkpost</groupId>
      <artifactId>sparkpost-lib</artifactId>
      <version>0.27</version>
    </dependency>

    <!-- HTTP client for API calls -->
    <dependency>
      <groupId>com.squareup.okhttp3</groupId>
      <artifactId>okhttp</artifactId>
      <version>4.10.0</version>
    </dependency>
    <dependency>
      <groupId>com.vladmihalcea</groupId>
      <artifactId>hibernate-types-52</artifactId>
      <version>2.21.1</version>
    </dependency>
    <dependency>
      <groupId>com.wisestep</groupId>
      <artifactId>wisestepcore</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.oltu.oauth2</groupId>
      <artifactId>org.apache.oltu.oauth2.client</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.tika</groupId>
      <artifactId>tika-parsers</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jetbrains.kotlin</groupId>
      <artifactId>kotlin-stdlib</artifactId>
      <version>1.3.72</version>
    </dependency>

    <dependency>
      <groupId>org.json</groupId>
      <artifactId>json</artifactId>
      <version>20230227</version>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
    </dependency>
    <!--        <dependency>-->
    <!--            <groupId>org.springframework.boot</groupId>-->
    <!--            <artifactId>spring-boot-starter-data-cassandra</artifactId>-->
    <!--        </dependency>-->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-mail</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-quartz</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>

    <!-- Amazon SES -->
    <dependency>
      <groupId>software.amazon.awssdk</groupId>
      <artifactId>ses</artifactId>
      <version>2.20.20</version>
    </dependency>

  </dependencies>
  <build>
    <defaultGoal>spring-boot:run</defaultGoal>
    <pluginManagement>
      <plugins>
        <!--
            This plugin's configuration is used to store Eclipse m2e settings only.
            It has no influence on the Maven build itself.
            Remove when the m2e plugin can correctly bind to Maven lifecycle
        -->
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <versionRange>${jacoco-maven-plugin.version}</versionRange>
                    <goals>
                      <goal>prepare-agent</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
        <plugin>
          <groupId>com.google.cloud.tools</groupId>
          <artifactId>jib-maven-plugin</artifactId>
          <version>${jib-maven-plugin.version}</version>
          <configuration>
            <from>
              <image>adoptopenjdk:11-jre-hotspot</image>
              <platforms>
                <platform>
                  <architecture>arm64</architecture>
                  <os>linux</os>
                </platform>
              </platforms>
            </from>
            <to>
              <image>${dockerimage.name}:latest</image>
            </to>
            <container>
              <entrypoint>
                <shell>sh</shell>
                <option>-c</option>
                <arg>chmod +x /entrypoint.sh &amp;&amp; sync &amp;&amp; /entrypoint.sh</arg>
              </entrypoint>
              <ports>
                <port>8087</port>
              </ports>
              <environment>
                <SPRING_OUTPUT_ANSI_ENABLED>ALWAYS</SPRING_OUTPUT_ANSI_ENABLED>
                <JHIPSTER_SLEEP>0</JHIPSTER_SLEEP>
                <RABBITMQ_HOST>""</RABBITMQ_HOST>
                <RABBITMQ_PORT>""</RABBITMQ_PORT>
                <RABBITMQ_USERNAME>""</RABBITMQ_USERNAME>
                <RABBITMQ_PASSWORD>""</RABBITMQ_PASSWORD>
                <KAFKA_BOOTSTRAP_ADDRESS>""</KAFKA_BOOTSTRAP_ADDRESS>
                <KAFKA_SCHEMA_REGISTRY_URL>""</KAFKA_SCHEMA_REGISTRY_URL>
              </environment>
              <creationTime>USE_CURRENT_TIMESTAMP</creationTime>
            </container>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>com.github.ekryd.sortpom</groupId>
        <artifactId>sortpom-maven-plugin</artifactId>
        <version>${sortpom-maven-plugin.version}</version>
        <executions>
          <execution>
            <phase>verify</phase>
            <goals>
              <goal>sort</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <sortProperties>true</sortProperties>
          <nrOfIndentSpace>4</nrOfIndentSpace>
          <sortDependencies>groupId,artifactId</sortDependencies>
          <sortPlugins>groupId,artifactId</sortPlugins>
          <keepBlankLines>true</keepBlankLines>
          <expandEmptyElements>false</expandEmptyElements>
        </configuration>
      </plugin>
      <plugin>
        <groupId>com.spotify</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>1.2.2</version>
        <configuration>
          <imageName>${dockerimage.name}</imageName>
          <dockerDirectory>src/main/docker</dockerDirectory>
          <resources>
            <resource>
              <targetPath>/</targetPath>
              <directory>${project.build.directory}</directory>
              <include>${project.build.finalName}.war</include>
            </resource>
          </resources>
        </configuration>
      </plugin>
      <plugin>
        <groupId>io.gatling</groupId>
        <artifactId>gatling-maven-plugin</artifactId>
        <version>${gatling-maven-plugin.version}</version>
        <configuration>
          <configFolder>src/test/gatling/conf</configFolder>
          <dataFolder>src/test/gatling/data</dataFolder>
          <resultsFolder>target/gatling/results</resultsFolder>
          <bodiesFolder>src/test/gatling/bodies</bodiesFolder>
          <simulationsFolder>src/test/gatling/simulations</simulationsFolder>
          <!-- This will run multiple simulations one by one. Useful when doing gatling tests in CI
               You must remove the simulationClass property in order to run multiple simulations -->
          <!--<runMultipleSimulations>true</runMultipleSimulations>-->
          <!-- This will force Gatling to ask which simulation to run
            This is useful when you have multiple simulations -->
          <simulationClass>*</simulationClass>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.6.0</version>
        <configuration>
          <annotationProcessorPaths>
            <path>
              <groupId>org.mapstruct</groupId>
              <artifactId>mapstruct-processor</artifactId>
              <version>${mapstruct.version}</version>
            </path>
          </annotationProcessorPaths>
        </configuration>
      </plugin>
      <plugin>
        <groupId>com.google.cloud.tools</groupId>
        <artifactId>jib-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-eclipse-plugin</artifactId>
        <configuration>
          <downloadSources>true</downloadSources>
          <downloadJavadocs>true</downloadJavadocs>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>${maven-enforcer-plugin.version}</version>
        <executions>
          <execution>
            <id>enforce-versions</id>
            <goals>
              <goal>enforce</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <rules>
            <requireMavenVersion>
              <message>You are running an older version of Maven. JHipster requires at least Maven 3.0</message>
              <version>[3.0.0,)</version>
            </requireMavenVersion>
            <requireJavaVersion>
              <message>You are running an older version of Java. JHipster requires at least JDK ${java.version}</message>
              <version>[${java.version}.0,)</version>
            </requireJavaVersion>
          </rules>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>${maven-resources-plugin.version}</version>
        <executions>
          <execution>
            <id>default-resources</id>
            <phase>validate</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>target/classes</outputDirectory>
              <useDefaultDelimiters>false</useDefaultDelimiters>
              <delimiters>
                <delimiter>#</delimiter>
              </delimiters>
              <resources>
                <resource>
                  <directory>../wisestep-global-conf/</directory>
                  <filtering>true</filtering>
                  <includes>
                    <include>logback-spring.xml</include>
                    <include>banner.txt</include>
                  </includes>
                </resource>
                <resource>
                  <directory>../../wisestep-global-conf/</directory>
                  <filtering>true</filtering>
                  <includes>
                    <include>logback-spring.xml</include>
                    <include>banner.txt</include>
                  </includes>
                </resource>
                <resource>
                  <directory>src/main/resources/</directory>
                  <filtering>true</filtering>
                  <includes>
                    <include>**/*.xml</include>
                    <include>**/*.yml</include>
                  </includes>
                </resource>
                <resource>
                  <directory>src/main/resources/</directory>
                  <filtering>false</filtering>
                  <excludes>
                    <exclude>**/*.xml</exclude>
                    <exclude>**/*.yml</exclude>
                  </excludes>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <!-- Force alphabetical order to have a reproducible build -->
          <runOrder>alphabetical</runOrder>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco-maven-plugin.version}</version>
        <executions>
          <execution>
            <id>pre-unit-tests</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <configuration>
              <!-- Sets the path to the file which contains the execution data. -->
              <destFile>${project.testresult.directory}/coverage/jacoco/jacoco.exec</destFile>
            </configuration>
          </execution>
          <!-- Ensures that the code coverage report for unit tests is created after unit tests have been run -->
          <execution>
            <id>post-unit-test</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
            <configuration>
              <dataFile>${project.testresult.directory}/coverage/jacoco/jacoco.exec</dataFile>
              <outputDirectory>${project.testresult.directory}/coverage/jacoco</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.sonarsource.scanner.maven</groupId>
        <artifactId>sonar-maven-plugin</artifactId>
        <version>${sonar-maven-plugin.version}</version>
      </plugin>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
          <executable>true</executable>
          <fork>false</fork>
          <!--
          Enable the line below to have remote debugging of your application on port 5005
          <jvmArguments>-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005</jvmArguments>
          -->
        </configuration>
      </plugin>
      <!-- jhipster-needle-maven-add-plugin -->
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>no-liquibase</id>
      <properties>
        <profile.no-liquibase>,no-liquibase</profile.no-liquibase>
      </properties>
    </profile>
    <profile>
      <id>swagger</id>
      <properties>
        <profile.swagger>,swagger</profile.swagger>
      </properties>
    </profile>
    <profile>
      <id>shell</id>
      <dependencies>
        <dependency>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-remote-shell</artifactId>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>dev</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-war-plugin</artifactId>
            <configuration />
          </plugin>
        </plugins>
      </build>
      <properties>
        <logback.additivity>true</logback.additivity>
        <!-- log configuration -->
        <logback.loglevel>DEBUG</logback.loglevel>
        <logback.logname>com.wisestep</logback.logname>
        <logback.rootdirectory>target/logs/</logback.rootdirectory>
        <!-- default Spring profiles -->
        <spring.profiles.active>dev${profile.no-liquibase}</spring.profiles.active>
      </properties>
      <dependencies>
        <dependency>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-devtools</artifactId>
          <optional>true</optional>
        </dependency>
        <dependency>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-undertow</artifactId>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>prod</id>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-clean-plugin</artifactId>
            <version>2.5</version>
            <configuration>
              <filesets>
                <fileset>
                  <directory>target/www/</directory>
                </fileset>
              </filesets>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-war-plugin</artifactId>
            <configuration />
          </plugin>
          <plugin>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-maven-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>build-info</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <executable>true</executable>
            </configuration>
          </plugin>
        </plugins>
      </build>
      <properties>
        <logback.additivity>false</logback.additivity>
        <!-- log configuration -->
        <logback.loglevel>INFO</logback.loglevel>
        <logback.logname>com.wisestep</logback.logname>
        <logback.rootdirectory>/var/wslogs/</logback.rootdirectory>
        <!-- default Spring profiles -->
        <spring.profiles.active>prod${profile.swagger}${profile.no-liquibase}</spring.profiles.active>
      </properties>
      <dependencies>
        <dependency>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-undertow</artifactId>
        </dependency>
        <dependency>
          <groupId>org.springframework.cloud</groupId>
          <artifactId>spring-cloud-starter-aws-parameter-store-config</artifactId>
          <version>2.2.1.RELEASE</version>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <!--
          Profile for doing "continuous compilation" with the Scala Maven plugin.
          It allows automatic compilation of Java classes as soon as they are saved.
          To use it, run in 3 terminals:
          - './mvnw -Pcc scala:cc' for continous compilation of your classes
          - './mvnw -Pcc' for hot reload of Spring boot
          - 'gulp' for hot reload of the HTML/JavaScript assets
          Everything should hot reload automatically!
      -->
      <id>cc</id>
      <build>
        <plugins>
          <plugin>
            <groupId>net.alchim31.maven</groupId>
            <artifactId>scala-maven-plugin</artifactId>
            <version>3.2.2</version>
            <executions>
              <execution>
                <id>compile</id>
                <phase>compile</phase>
                <goals>
                  <goal>add-source</goal>
                  <goal>compile</goal>
                </goals>
              </execution>
              <execution>
                <id>test-compile</id>
                <phase>test-compile</phase>
                <goals>
                  <goal>add-source</goal>
                  <goal>testCompile</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <recompileMode>incremental</recompileMode>
              <verbose>true</verbose>
              <scalaVersion>2.11.7</scalaVersion>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <executions>
              <execution>
                <id>default-compile</id>
                <phase>none</phase>
              </execution>
              <execution>
                <id>default-testCompile</id>
                <phase>none</phase>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-war-plugin</artifactId>
            <configuration>
              <warSourceDirectory>src/main/webapp/</warSourceDirectory>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-maven-plugin</artifactId>
            <configuration>
              <executable>true</executable>
              <fork>false</fork>
              <addResources>true</addResources>
              <!--
              Enable the line below to have remote debugging of your application on port 5005
              <jvmArguments>-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005</jvmArguments>
              -->
            </configuration>
          </plugin>
        </plugins>
      </build>
      <properties>
        <!-- log configuration -->
        <logback.loglevel>DEBUG</logback.loglevel>
        <!-- default Spring profiles -->
        <spring.profiles.active>dev,swagger</spring.profiles.active>
      </properties>
      <dependencies>
        <dependency>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-devtools</artifactId>
          <optional>true</optional>
        </dependency>
        <dependency>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-undertow</artifactId>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <!--
          Profile for applying IDE-specific configuration.
          At the moment it only configures MapStruct, which you need when working
          with DTOs.
      -->
      <id>IDE</id>
      <dependencies>
        <dependency>
          <groupId>org.mapstruct</groupId>
          <artifactId>mapstruct-processor</artifactId>
          <version>${mapstruct.version}</version>
        </dependency>
      </dependencies>
    </profile>
  </profiles>
</project>
